<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Time Series on Andrea Perlato</title>
    <link>/categories/time-series/</link>
    <description>Recent content in Time Series on Andrea Perlato</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 05 Apr 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/categories/time-series/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Time Series Classification</title>
      <link>/tspost/time-series-classification/</link>
      <pubDate>Fri, 05 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/tspost/time-series-classification/</guid>
      <description>body {text-align: justify}In order to perform a Time series Classification we use Decision Tree, and then we look at the performance of the classification. 
We use the Synthetic Control Chart Time Series. This dataset contains 600 examples of control charts synthetically generated by the process in Alcock and Manolopoulos (1999).
data &amp;lt;- read.table(&amp;quot;C:/07 - R Website/dataset/TS/synthetic_control.txt&amp;quot;, header = FALSE)# Data Preparationpattern100 &amp;lt;- c(rep(&amp;#39;Normal&amp;#39;, 100),rep(&amp;#39;Cyclic&amp;#39;, 100),rep(&amp;#39;Increasing trend&amp;#39;, 100),rep(&amp;#39;Decreasing trend&amp;#39;, 100),rep(&amp;#39;Upward shift&amp;#39;, 100),rep(&amp;#39;Downward shift&amp;#39;, 100))# Create data framenewdata &amp;lt;- data.</description>
    </item>
    
    <item>
      <title>Time Series Clustering</title>
      <link>/tspost/time-series-clustering/</link>
      <pubDate>Thu, 04 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/tspost/time-series-clustering/</guid>
      <description>body {text-align: justify}Clustering is the task of grouping s set of objects in such a way that objects in the same group are more similar to each other than to those in other groups. Connectivity-based clustering connects objects to form clusters based on their distance. A cluster can be descibed by the maximum distance needed to connect parts of the cluster. At different distances, different clusters will form, which can be represented using dendrogram.</description>
    </item>
    
    <item>
      <title>Interactive Forecasting</title>
      <link>/graphpost/interactive-forecasting/</link>
      <pubDate>Wed, 03 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/graphpost/interactive-forecasting/</guid>
      <description>body {text-align: justify}In this post, we use some fairly new technology of time series analysis namely neural nets and interactive charting tools.
INTERACTIVE GRAPH  The time series results should be presented interactively in order to highlight certain features.
# Handle outlierslibrary(forecast)myts &amp;lt;- tsclean(myts)# Set up a NNmynnetar &amp;lt;- nnetar(myts)# Forecast 3 yearsnnetforecast &amp;lt;- forecast(mynnetar, h = 36, PI = TRUE) # PI create the prediction intervals for the forecastlibrary(ggplot2)# Data we need for the graphdata &amp;lt;- nnetforecast$x # raw datalower &amp;lt;- nnetforecast$lower[,2] # confidence intervals lower boundupper &amp;lt;- nnetforecast$upper[,2] # confidence intervals upper boundpforecast &amp;lt;- nnetforecast$mean # th element meanmydata &amp;lt;- cbind(data, lower, upper, pforecast) # put everything in one dataframelibrary(dygraphs)dygraph(mydata, main = &amp;quot;Campsite Restaurant&amp;quot;) %&amp;gt;% # get data and the captiondyRangeSelector() %&amp;gt;% # the zoom tooldySeries(name = &amp;quot;data&amp;quot;, label = &amp;quot;Revenue Data&amp;quot;) %&amp;gt;% # add time series which are store in: data &amp;lt;- nnetforecast$xdySeries(c(&amp;quot;lower&amp;quot;,&amp;quot;pforecast&amp;quot;,&amp;quot;upper&amp;quot;), label = &amp;quot;Revenue Forecast&amp;quot;) %&amp;gt;% # add the forecast and CIdyLegend(show = &amp;quot;always&amp;quot;, hideOnMouseOut = FALSE) %&amp;gt;% # add the legend (time series + forecast)dyAxis(&amp;quot;y&amp;quot;, label = &amp;quot;Monthly Revenue USD&amp;quot;) %&amp;gt;% # label the y axisdyHighlight(highlightCircleSize = 5, # specify what happen when the mouse in hovering the graphhighlightSeriesOpts = list(strokeWidth = 2)) %&amp;gt;%dyOptions(axisLineColor = &amp;quot;navy&amp;quot;, gridLineColor = &amp;quot;grey&amp;quot;) %&amp;gt;% # set axis and fridline colorsdyAnnotation(&amp;quot;2010-8-1&amp;quot;, text = &amp;quot;CF&amp;quot;, tooltip = &amp;quot;Camp Festival&amp;quot;, attachAtBottom = T) # add annotation{&#34;</description>
    </item>
    
    <item>
      <title>Forecasting Product Demand</title>
      <link>/tspost/forecasting-product-demand/</link>
      <pubDate>Thu, 28 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>/tspost/forecasting-product-demand/</guid>
      <description>body {text-align: justify}Accurately predicting demand for products allows a company to stay ahead of the market.  We will predict demand for multiple products across a region of a state in the US. Then we will roll up these predictions across many different regions of the same state to form a complete hierarchical forecasting system.  We need to forecast the future values of our data.</description>
    </item>
    
    <item>
      <title>Applied Time Series and Forecasting </title>
      <link>/tspost/applied-time-series-and-forecasting/</link>
      <pubDate>Wed, 27 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>/tspost/applied-time-series-and-forecasting/</guid>
      <description>body {text-align: justify}In this particular field R is favored over Python. In fact, R has more features for Time Series.  A precious resource is the Rob Hyndman’s Blog. It explains step by step the standard univariate time series analysis.
FIRST  TRENDING DATA  In this example we explore how many people are working in a country: unemployment rate vs. labor force participation rate. That is used for propaganda purposes, because low unemployment rates show an optimistic picture about the economics of a country.</description>
    </item>
    
    <item>
      <title>Neural Nets and Interactive Graphs</title>
      <link>/tspost/neural-nets-and-interactive-graphs/</link>
      <pubDate>Wed, 27 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>/tspost/neural-nets-and-interactive-graphs/</guid>
      <description>body {text-align: justify}In this post, we use some fairly new technology of time series analysis namely neural nets and interactive charting tools. These techniques are the state of the art. The dataset we use for this example has: missing data, outliers, poor formatting.  The dataset i about restaurant at a campsite that is open whole year. There is a peak season in summer, and so we aspect to have seasonal data and trend might be present.</description>
    </item>
    
    <item>
      <title>Supply Chain Foundations</title>
      <link>/tspost/supply-chain-foundations/</link>
      <pubDate>Mon, 25 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>/tspost/supply-chain-foundations/</guid>
      <description>body { text-align: justify}  INTRODUCTION  Who do companies care about supply chain management? We know that food is always at the grocery store, and clothing at the department store. How they get there and who is making those items are there every single day? This is the job of supply chain manager. 
In supply chain management we start with purchasing, some people call it Procurement. The second part is Manufacturing and Operation, where the product is made, and we have to do that quickly and being able to do on a day.</description>
    </item>
    
    <item>
      <title>Statistical Background for Time Series</title>
      <link>/tspost/statistica-background-for-time-series/</link>
      <pubDate>Wed, 06 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>/tspost/statistica-background-for-time-series/</guid>
      <description>body {text-align: justify}In this post we will review the statistical background for time series analysis and forecasting.  We start about how to compare different time seris models against each other.
Forecast Accuracy  It determine how much difference thare is between the actual value and the forecast for the value. The simplest way to m ake a comparison is via scale dependent error because all the models need to be on the same scale using the Mean Absolute Error - MAE and the Root Mean Squared Error - RMSE.</description>
    </item>
    
  </channel>
</rss>